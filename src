{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9274599,"sourceType":"datasetVersion","datasetId":5613105}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/baongocdao/text-summarization?scriptVersionId=194623242\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-29T13:56:45.048764Z","iopub.execute_input":"2024-08-29T13:56:45.049172Z","iopub.status.idle":"2024-08-29T13:56:45.060581Z","shell.execute_reply.started":"2024-08-29T13:56:45.049137Z","shell.execute_reply":"2024-08-29T13:56:45.059499Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"/kaggle/input/dataset/preprocessing.py\n/kaggle/input/dataset/dataloader.py\n","output_type":"stream"}]},{"cell_type":"code","source":"!pip install peft","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:56:45.062538Z","iopub.execute_input":"2024-08-29T13:56:45.062904Z","iopub.status.idle":"2024-08-29T13:57:00.835772Z","shell.execute_reply.started":"2024-08-29T13:56:45.062861Z","shell.execute_reply":"2024-08-29T13:57:00.834731Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"Collecting peft\n  Downloading peft-0.12.0-py3-none-any.whl.metadata (13 kB)\nRequirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from peft) (1.26.4)\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from peft) (21.3)\nRequirement already satisfied: psutil in /opt/conda/lib/python3.10/site-packages (from peft) (5.9.3)\nRequirement already satisfied: pyyaml in /opt/conda/lib/python3.10/site-packages (from peft) (6.0.2)\nRequirement already satisfied: torch>=1.13.0 in /opt/conda/lib/python3.10/site-packages (from peft) (2.4.0)\nRequirement already satisfied: transformers in /opt/conda/lib/python3.10/site-packages (from peft) (4.44.0)\nRequirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (from peft) (4.66.4)\nRequirement already satisfied: accelerate>=0.21.0 in /opt/conda/lib/python3.10/site-packages (from peft) (0.33.0)\nRequirement already satisfied: safetensors in /opt/conda/lib/python3.10/site-packages (from peft) (0.4.4)\nRequirement already satisfied: huggingface-hub>=0.17.0 in /opt/conda/lib/python3.10/site-packages (from peft) (0.24.6)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.17.0->peft) (3.15.1)\nRequirement already satisfied: fsspec>=2023.5.0 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.17.0->peft) (2024.6.1)\nRequirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.17.0->peft) (2.32.3)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.17.0->peft) (4.12.2)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.0->peft) (3.1.2)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch>=1.13.0->peft) (1.13.2)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch>=1.13.0->peft) (3.3)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch>=1.13.0->peft) (3.1.4)\nRequirement already satisfied: regex!=2019.12.17 in /opt/conda/lib/python3.10/site-packages (from transformers->peft) (2024.5.15)\nRequirement already satisfied: tokenizers<0.20,>=0.19 in /opt/conda/lib/python3.10/site-packages (from transformers->peft) (0.19.1)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch>=1.13.0->peft) (2.1.5)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.17.0->peft) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.17.0->peft) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.17.0->peft) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface-hub>=0.17.0->peft) (2024.7.4)\nRequirement already satisfied: mpmath<1.4,>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from sympy->torch>=1.13.0->peft) (1.3.0)\nDownloading peft-0.12.0-py3-none-any.whl (296 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m296.4/296.4 kB\u001b[0m \u001b[31m2.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0mm\n\u001b[?25hInstalling collected packages: peft\nSuccessfully installed peft-0.12.0\n","output_type":"stream"}]},{"cell_type":"code","source":"import torch\nfrom datasets import load_dataset","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:00.837224Z","iopub.execute_input":"2024-08-29T13:57:00.837552Z","iopub.status.idle":"2024-08-29T13:57:00.842492Z","shell.execute_reply.started":"2024-08-29T13:57:00.837517Z","shell.execute_reply":"2024-08-29T13:57:00.841491Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"dataset = load_dataset('cnn_dailymail', '3.0.0')\ndataset","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:00.843783Z","iopub.execute_input":"2024-08-29T13:57:00.844077Z","iopub.status.idle":"2024-08-29T13:57:02.508758Z","shell.execute_reply.started":"2024-08-29T13:57:00.844045Z","shell.execute_reply":"2024-08-29T13:57:02.507808Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"DatasetDict({\n    train: Dataset({\n        features: ['article', 'highlights', 'id'],\n        num_rows: 287113\n    })\n    validation: Dataset({\n        features: ['article', 'highlights', 'id'],\n        num_rows: 13368\n    })\n    test: Dataset({\n        features: ['article', 'highlights', 'id'],\n        num_rows: 11490\n    })\n})"},"metadata":{}}]},{"cell_type":"code","source":"from transformers import T5ForConditionalGeneration, T5TokenizerFast\nfrom peft import PrefixTuningConfig, get_peft_model, TaskType\n\npeft_config = PrefixTuningConfig(task_type=TaskType.SEQ_2_SEQ_LM, \n                                 inference_mode=False, \n                                 num_virtual_tokens=20)\n\norigin_model = T5ForConditionalGeneration.from_pretrained('t5-small')\nmodel = get_peft_model(origin_model, peft_config)\nmodel.print_trainable_parameters()","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:02.511179Z","iopub.execute_input":"2024-08-29T13:57:02.511493Z","iopub.status.idle":"2024-08-29T13:57:06.485462Z","shell.execute_reply.started":"2024-08-29T13:57:02.511459Z","shell.execute_reply":"2024-08-29T13:57:06.48451Z"},"trusted":true},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.21k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e2f7958b9ef442fb9826ba2f8fa48b86"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/242M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6a74361292e2452daf7e3c23cc3dda1d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/147 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7f47bae10bd64ad9aab029810d12017b"}},"metadata":{}},{"name":"stdout","text":"trainable params: 122,880 || all params: 60,629,504 || trainable%: 0.2027\n","output_type":"stream"}]},{"cell_type":"code","source":"model","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:06.486645Z","iopub.execute_input":"2024-08-29T13:57:06.487129Z","iopub.status.idle":"2024-08-29T13:57:06.496612Z","shell.execute_reply.started":"2024-08-29T13:57:06.487093Z","shell.execute_reply":"2024-08-29T13:57:06.495385Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"PeftModelForSeq2SeqLM(\n  (base_model): T5ForConditionalGeneration(\n    (shared): Embedding(32128, 512)\n    (encoder): T5Stack(\n      (embed_tokens): Embedding(32128, 512)\n      (block): ModuleList(\n        (0): T5Block(\n          (layer): ModuleList(\n            (0): T5LayerSelfAttention(\n              (SelfAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n                (relative_attention_bias): Embedding(32, 8)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (1): T5LayerFF(\n              (DenseReluDense): T5DenseActDense(\n                (wi): Linear(in_features=512, out_features=2048, bias=False)\n                (wo): Linear(in_features=2048, out_features=512, bias=False)\n                (dropout): Dropout(p=0.1, inplace=False)\n                (act): ReLU()\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n        )\n        (1-5): 5 x T5Block(\n          (layer): ModuleList(\n            (0): T5LayerSelfAttention(\n              (SelfAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (1): T5LayerFF(\n              (DenseReluDense): T5DenseActDense(\n                (wi): Linear(in_features=512, out_features=2048, bias=False)\n                (wo): Linear(in_features=2048, out_features=512, bias=False)\n                (dropout): Dropout(p=0.1, inplace=False)\n                (act): ReLU()\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n        )\n      )\n      (final_layer_norm): T5LayerNorm()\n      (dropout): Dropout(p=0.1, inplace=False)\n    )\n    (decoder): T5Stack(\n      (embed_tokens): Embedding(32128, 512)\n      (block): ModuleList(\n        (0): T5Block(\n          (layer): ModuleList(\n            (0): T5LayerSelfAttention(\n              (SelfAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n                (relative_attention_bias): Embedding(32, 8)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (1): T5LayerCrossAttention(\n              (EncDecAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (2): T5LayerFF(\n              (DenseReluDense): T5DenseActDense(\n                (wi): Linear(in_features=512, out_features=2048, bias=False)\n                (wo): Linear(in_features=2048, out_features=512, bias=False)\n                (dropout): Dropout(p=0.1, inplace=False)\n                (act): ReLU()\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n        )\n        (1-5): 5 x T5Block(\n          (layer): ModuleList(\n            (0): T5LayerSelfAttention(\n              (SelfAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (1): T5LayerCrossAttention(\n              (EncDecAttention): T5Attention(\n                (q): Linear(in_features=512, out_features=512, bias=False)\n                (k): Linear(in_features=512, out_features=512, bias=False)\n                (v): Linear(in_features=512, out_features=512, bias=False)\n                (o): Linear(in_features=512, out_features=512, bias=False)\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (2): T5LayerFF(\n              (DenseReluDense): T5DenseActDense(\n                (wi): Linear(in_features=512, out_features=2048, bias=False)\n                (wo): Linear(in_features=2048, out_features=512, bias=False)\n                (dropout): Dropout(p=0.1, inplace=False)\n                (act): ReLU()\n              )\n              (layer_norm): T5LayerNorm()\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n        )\n      )\n      (final_layer_norm): T5LayerNorm()\n      (dropout): Dropout(p=0.1, inplace=False)\n    )\n    (lm_head): Linear(in_features=512, out_features=32128, bias=False)\n  )\n  (prompt_encoder): ModuleDict(\n    (default): PrefixEncoder(\n      (embedding): Embedding(20, 6144)\n    )\n  )\n  (word_embeddings): Embedding(32128, 512)\n)"},"metadata":{}}]},{"cell_type":"code","source":"device = 'cuda' if torch.cuda.is_available() else 'cpu'\n\nmodel.to(device)\nmodel = torch.nn.DataParallel(model)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:06.497835Z","iopub.execute_input":"2024-08-29T13:57:06.49816Z","iopub.status.idle":"2024-08-29T13:57:06.842657Z","shell.execute_reply.started":"2024-08-29T13:57:06.49813Z","shell.execute_reply":"2024-08-29T13:57:06.841623Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"dataset['train']['highlights'][0]","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:06.843783Z","iopub.execute_input":"2024-08-29T13:57:06.844109Z","iopub.status.idle":"2024-08-29T13:57:07.395054Z","shell.execute_reply.started":"2024-08-29T13:57:06.844074Z","shell.execute_reply":"2024-08-29T13:57:07.394071Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"\"Harry Potter star Daniel Radcliffe gets £20M fortune as he turns 18 Monday .\\nYoung actor says he has no plans to fritter his cash away .\\nRadcliffe's earnings from first five Potter films have been held in trust fund .\""},"metadata":{}}]},{"cell_type":"code","source":"import re\n\ndef remove_tag(text):\n    ending_phrase = 'E-mail to a friend'\n    title_phrase = '--'\n   \n    title_idx = text.find(title_phrase)\n    end_idx = text.find(ending_phrase) \n    \n    if end_idx != -1 :\n        text = text[:end_idx]\n    if title_idx != -1 :\n        text = text[title_idx+3 :]\n    text = re.sub(r'/(CNN/)', '', text)\n    return text.strip()\n\ndef remove_hashtags(text):\n    cleaned_text = re.sub(r'#\\w+', '', text)\n    return cleaned_text.strip()\n\ndef remove_newline(text):\n    cleaned_text = re.sub(r'\\n', '', text)\n    return cleaned_text.strip()\ndef filter_chars(text):\n    sent = []\n    for word in text.split(' '):\n        if ('$' in word) or ('&' in word):\n            sent.append('')\n        else:\n            sent.append(word)\n    return ' '.join(sent)\n\ndef clean_data(text):\n    text = remove_tag(text)\n    text = remove_hashtags(text)\n    text = filter_chars(text)\n    text = remove_newline(text)\n    return text","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:07.396318Z","iopub.execute_input":"2024-08-29T13:57:07.396724Z","iopub.status.idle":"2024-08-29T13:57:07.407566Z","shell.execute_reply.started":"2024-08-29T13:57:07.396688Z","shell.execute_reply":"2024-08-29T13:57:07.406647Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"out = clean_data(dataset['train']['highlights'][0])\nout","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:07.408952Z","iopub.execute_input":"2024-08-29T13:57:07.409641Z","iopub.status.idle":"2024-08-29T13:57:07.953749Z","shell.execute_reply.started":"2024-08-29T13:57:07.409604Z","shell.execute_reply":"2024-08-29T13:57:07.952667Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"\"Harry Potter star Daniel Radcliffe gets £20M fortune as he turns 18 Monday .Young actor says he has no plans to fritter his cash away .Radcliffe's earnings from first five Potter films have been held in trust fund .\""},"metadata":{}}]},{"cell_type":"code","source":"tokenizer = T5TokenizerFast.from_pretrained('t5-small')","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:07.955208Z","iopub.execute_input":"2024-08-29T13:57:07.955644Z","iopub.status.idle":"2024-08-29T13:57:08.874602Z","shell.execute_reply.started":"2024-08-29T13:57:07.955579Z","shell.execute_reply":"2024-08-29T13:57:08.873803Z"},"trusted":true},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/2.32k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"805ddc7d558c439d80ebde63597b1d34"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"spiece.model:   0%|          | 0.00/792k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0c3476b6712841dc9617afaedd760011"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.39M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0aba5d8ec3a545b2a47d62cede6dbd23"}},"metadata":{}}]},{"cell_type":"code","source":"def preprocess_valid(example):\n    text = example['article']\n    summary = example['highlights']\n    \n    text = clean_data(text)\n    summary = clean_data(text)\n    \n    text_token = tokenizer(text, padding = 'max_length')\n    summary_token = tokenizer(summary, padding = 'max_length')\n    return {\n        'text_input_ids': text_token['input_ids'],\n        'attention_mask': text_token['attention_mask'],\n        'text': text,\n        'summary_input_ids': summary_token['input_ids']\n    }\n\ndef preprocess_train(example):\n    text = example['article']\n    summary = example['highlights']\n    \n    text = clean_data(text)\n    summary = clean_data(text)\n    \n    text_token = tokenizer(text, padding = 'max_length')\n    summary_token = tokenizer(summary, padding = 'max_length')\n    return {\n        'text_input_ids': text_token['input_ids'],\n        'attention_mask': text_token['attention_mask'],\n        'summary_input_ids': summary_token['input_ids']\n    }","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:08.87584Z","iopub.execute_input":"2024-08-29T13:57:08.876163Z","iopub.status.idle":"2024-08-29T13:57:08.883995Z","shell.execute_reply.started":"2024-08-29T13:57:08.876128Z","shell.execute_reply":"2024-08-29T13:57:08.883071Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"train_dt = dataset['train'].select(range(10000))\nvalid_dt = dataset['train'].select(range(10000, 12000))\n\ntrain_set = train_dt.map(preprocess_train)\nvalid_set = valid_dt.map(preprocess_valid)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:57:08.88513Z","iopub.execute_input":"2024-08-29T13:57:08.885409Z","iopub.status.idle":"2024-08-29T13:58:19.361533Z","shell.execute_reply.started":"2024-08-29T13:57:08.885378Z","shell.execute_reply":"2024-08-29T13:58:19.360511Z"},"trusted":true},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/10000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"06da643a03a44b1ba56f32627884e0a4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/2000 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7cd65475ec994625b4d663c8c298f2d8"}},"metadata":{}}]},{"cell_type":"code","source":"tokenizer.pad_token = tokenizer.eos_token","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:19.365579Z","iopub.execute_input":"2024-08-29T13:58:19.365954Z","iopub.status.idle":"2024-08-29T13:58:19.370619Z","shell.execute_reply.started":"2024-08-29T13:58:19.365918Z","shell.execute_reply":"2024-08-29T13:58:19.369524Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"def get_collate(pad_idx):\n    def collate_fn(batch):\n        text_input_ids = [torch.tensor(i['text_input_ids']) for i in batch]\n        text_input_ids = torch.nn.utils.rnn.pad_sequence(text_input_ids, \n                                                      padding_value = pad_idx, \n                                                      batch_first = True)\n        summary_input_ids = [torch.tensor(i['summary_input_ids']) for i in batch]\n        summary_input_ids = torch.nn.utils.rnn.pad_sequence(summary_input_ids,\n                                                        padding_value = pad_idx,\n                                                        batch_first = True)\n        attention_mask = [torch.tensor(i['attention_mask']) for i in batch]\n        attention_mask = torch.nn.utils.rnn.pad_sequence(attention_mask, \n                                                      padding_value = pad_idx,\n                                                      batch_first = True)\n        return {\n            'text_input_ids': text_input_ids,\n            'attention_mask': attention_mask,\n            'summary_input_ids': summary_input_ids\n        }\n    return collate_fn","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:19.372061Z","iopub.execute_input":"2024-08-29T13:58:19.372482Z","iopub.status.idle":"2024-08-29T13:58:19.475847Z","shell.execute_reply.started":"2024-08-29T13:58:19.372429Z","shell.execute_reply":"2024-08-29T13:58:19.474802Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"def get_dataloader(dataset, pad_idx, batch_size):\n    collate_fn = get_collate(pad_idx)\n    return DataLoader(dataset, \n                      batch_size = batch_size, \n                      collate_fn = collate_fn, \n                      shuffle = True)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:19.477319Z","iopub.execute_input":"2024-08-29T13:58:19.478079Z","iopub.status.idle":"2024-08-29T13:58:19.489988Z","shell.execute_reply.started":"2024-08-29T13:58:19.478014Z","shell.execute_reply":"2024-08-29T13:58:19.489005Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"from torch.utils.data import DataLoader\n\nbatch_size = 2\npad_idx = tokenizer.pad_token_id\ntrain_dataset = get_dataloader(train_set, pad_idx = pad_idx, batch_size = batch_size)\nvalid_dataset = get_dataloader(valid_set, pad_idx = pad_idx, batch_size = batch_size)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:19.491293Z","iopub.execute_input":"2024-08-29T13:58:19.491795Z","iopub.status.idle":"2024-08-29T13:58:19.502701Z","shell.execute_reply.started":"2024-08-29T13:58:19.49175Z","shell.execute_reply":"2024-08-29T13:58:19.501852Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"!pip install evaluate","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:19.503945Z","iopub.execute_input":"2024-08-29T13:58:19.504233Z","iopub.status.idle":"2024-08-29T13:58:33.688995Z","shell.execute_reply.started":"2024-08-29T13:58:19.504202Z","shell.execute_reply":"2024-08-29T13:58:33.687766Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stderr","text":"huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n","output_type":"stream"},{"name":"stdout","text":"Collecting evaluate\n  Downloading evaluate-0.4.2-py3-none-any.whl.metadata (9.3 kB)\nRequirement already satisfied: datasets>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from evaluate) (2.21.0)\nRequirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from evaluate) (1.26.4)\nRequirement already satisfied: dill in /opt/conda/lib/python3.10/site-packages (from evaluate) (0.3.8)\nRequirement already satisfied: pandas in /opt/conda/lib/python3.10/site-packages (from evaluate) (2.2.2)\nRequirement already satisfied: requests>=2.19.0 in /opt/conda/lib/python3.10/site-packages (from evaluate) (2.32.3)\nRequirement already satisfied: tqdm>=4.62.1 in /opt/conda/lib/python3.10/site-packages (from evaluate) (4.66.4)\nRequirement already satisfied: xxhash in /opt/conda/lib/python3.10/site-packages (from evaluate) (3.4.1)\nRequirement already satisfied: multiprocess in /opt/conda/lib/python3.10/site-packages (from evaluate) (0.70.16)\nRequirement already satisfied: fsspec>=2021.05.0 in /opt/conda/lib/python3.10/site-packages (from fsspec[http]>=2021.05.0->evaluate) (2024.6.1)\nRequirement already satisfied: huggingface-hub>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from evaluate) (0.24.6)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from evaluate) (21.3)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from datasets>=2.0.0->evaluate) (3.15.1)\nRequirement already satisfied: pyarrow>=15.0.0 in /opt/conda/lib/python3.10/site-packages (from datasets>=2.0.0->evaluate) (16.1.0)\nRequirement already satisfied: aiohttp in /opt/conda/lib/python3.10/site-packages (from datasets>=2.0.0->evaluate) (3.9.5)\nRequirement already satisfied: pyyaml>=5.1 in /opt/conda/lib/python3.10/site-packages (from datasets>=2.0.0->evaluate) (6.0.2)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /opt/conda/lib/python3.10/site-packages (from huggingface-hub>=0.7.0->evaluate) (4.12.2)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->evaluate) (3.1.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->evaluate) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->evaluate) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->evaluate) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests>=2.19.0->evaluate) (2024.7.4)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas->evaluate) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas->evaluate) (2024.1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas->evaluate) (2024.1)\nRequirement already satisfied: aiosignal>=1.1.2 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.3.1)\nRequirement already satisfied: attrs>=17.3.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (23.2.0)\nRequirement already satisfied: frozenlist>=1.1.1 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.4.1)\nRequirement already satisfied: multidict<7.0,>=4.5 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (6.0.5)\nRequirement already satisfied: yarl<2.0,>=1.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (1.9.4)\nRequirement already satisfied: async-timeout<5.0,>=4.0 in /opt/conda/lib/python3.10/site-packages (from aiohttp->datasets>=2.0.0->evaluate) (4.0.3)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas->evaluate) (1.16.0)\nDownloading evaluate-0.4.2-py3-none-any.whl (84 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m84.1/84.1 kB\u001b[0m \u001b[31m836.3 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0ma \u001b[36m0:00:01\u001b[0m\n\u001b[?25hInstalling collected packages: evaluate\nSuccessfully installed evaluate-0.4.2\n","output_type":"stream"}]},{"cell_type":"code","source":"!pip install rouge_score","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:33.690578Z","iopub.execute_input":"2024-08-29T13:58:33.690969Z","iopub.status.idle":"2024-08-29T13:58:49.549867Z","shell.execute_reply.started":"2024-08-29T13:58:33.690931Z","shell.execute_reply":"2024-08-29T13:58:49.548781Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stderr","text":"huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\nTo disable this warning, you can either:\n\t- Avoid using `tokenizers` before the fork if possible\n\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n","output_type":"stream"},{"name":"stdout","text":"Collecting rouge_score\n  Downloading rouge_score-0.1.2.tar.gz (17 kB)\n  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: absl-py in /opt/conda/lib/python3.10/site-packages (from rouge_score) (1.4.0)\nRequirement already satisfied: nltk in /opt/conda/lib/python3.10/site-packages (from rouge_score) (3.2.4)\nRequirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from rouge_score) (1.26.4)\nRequirement already satisfied: six>=1.14.0 in /opt/conda/lib/python3.10/site-packages (from rouge_score) (1.16.0)\nBuilding wheels for collected packages: rouge_score\n  Building wheel for rouge_score (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for rouge_score: filename=rouge_score-0.1.2-py3-none-any.whl size=24934 sha256=d64a24540e120e2c668e3871378f67144cef033dbfc891f7a0395fdea5b800d9\n  Stored in directory: /root/.cache/pip/wheels/5f/dd/89/461065a73be61a532ff8599a28e9beef17985c9e9c31e541b4\nSuccessfully built rouge_score\nInstalling collected packages: rouge_score\nSuccessfully installed rouge_score-0.1.2\n","output_type":"stream"}]},{"cell_type":"code","source":"import evaluate\n\nrouge_score = evaluate.load('rouge')","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:58:49.551461Z","iopub.execute_input":"2024-08-29T13:58:49.551845Z","iopub.status.idle":"2024-08-29T13:59:06.292878Z","shell.execute_reply.started":"2024-08-29T13:58:49.551806Z","shell.execute_reply":"2024-08-29T13:59:06.29204Z"},"trusted":true},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":"Downloading builder script:   0%|          | 0.00/6.27k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6f31647bc320437b8ccd32b36d25fda8"}},"metadata":{}}]},{"cell_type":"code","source":"import tqdm\ndef train_session(model, dataloader, optimizer, device):\n    epoch_loss = []\n    model.train()\n    for batch in tqdm.tqdm(dataloader, desc = 'training....'):\n        input_ids = batch['text_input_ids'].to(device)\n        attention_mask = batch['attention_mask'].to(device)\n        labels = batch['summary_input_ids'].to(device)\n        output = model(input_ids = input_ids, \n                       attention_mask = attention_mask, \n                       labels = labels)\n        loss = output.loss.mean()\n        loss.backward()\n        optimizer.step()\n        optimizer.zero_grad()\n        epoch_loss.append(loss.item())\n        del batch\n        del loss\n\n    return np.mean(epoch_loss)","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:59:06.294075Z","iopub.execute_input":"2024-08-29T13:59:06.294863Z","iopub.status.idle":"2024-08-29T13:59:06.303236Z","shell.execute_reply.started":"2024-08-29T13:59:06.294797Z","shell.execute_reply":"2024-08-29T13:59:06.302292Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"def compute_rouge(predict_ids, labels):\n    references = tokenizer.batch_decode(labels)\n    predictions = tokenizer.batch_decode(predict_ids)\n    score = rouge_score.compute(predictions = predictions, references = references)\n    return score['rougeLsum']\n    \ndef eval_session(model, dataloader, optimizer, device):\n    epoch_loss = []\n    epoch_rouge = []\n    model.eval()\n    for batch in tqdm.tqdm(dataloader, desc='evaluate.....'):\n        #text = batch['text']\n        input_ids = batch['text_input_ids'].to(device)\n        attention_mask = batch['attention_mask'].to(device)\n        labels = batch['summary_input_ids'].to(device)\n        with torch.no_grad():\n            original_model = model.module\n            output = model(input_ids = input_ids, \n                           attention_mask = attention_mask,\n                           labels = labels)\n            predict_ids = original_model.generate(input_ids = input_ids, max_length = 300)\n            loss = output.loss.mean()\n            epoch_loss.append(loss.item())\n            rouge = compute_rouge(predict_ids, labels)\n            epoch_rouge.append(rouge)\n    return {\n        'loss': np.mean(epoch_loss),\n        'rouge': np.mean(epoch_rouge)\n            }","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:59:06.304679Z","iopub.execute_input":"2024-08-29T13:59:06.304988Z","iopub.status.idle":"2024-08-29T13:59:06.32218Z","shell.execute_reply.started":"2024-08-29T13:59:06.304954Z","shell.execute_reply":"2024-08-29T13:59:06.321272Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"lr = 2e-4\noptimizer = torch.optim.AdamW(model.parameters(), lr= lr, weight_decay = 1e-5)\nepoch = 5\n#scheduler = torch.optim.lr_scheduler.StepLR(optimizer, step_size = 3, gamma=0.5)\nloss, loss_eval = [], []\nrouge_epoch = []\nfor i in range(epoch):\n    print(f'epoch:{i}')\n    \n    loss_value = train_session(model, train_dataset, optimizer, device)\n    loss.append(loss_value)\n    print(f'loss:{loss_value}')\n    #scheduler.step()\n    valid_result = eval_session(model, valid_dataset, optimizer, device)\n    loss_valid = valid_result['loss']\n    rouge = valid_result['rouge']\n    loss_eval.append(loss_valid)\n    rouge_epoch.append(rouge)\n    print(f'loss:{loss_valid}')\n    print(f'rouge:{rouge}')\ntorch.save(model.state_dict(), './state_dict.pt')","metadata":{"execution":{"iopub.status.busy":"2024-08-29T13:59:06.323421Z","iopub.execute_input":"2024-08-29T13:59:06.323731Z","iopub.status.idle":"2024-08-29T20:24:13.18999Z","shell.execute_reply.started":"2024-08-29T13:59:06.323698Z","shell.execute_reply":"2024-08-29T20:24:13.188754Z"},"trusted":true},"execution_count":32,"outputs":[{"name":"stdout","text":"epoch:0\n","output_type":"stream"},{"name":"stderr","text":"training....:   0%|          | 0/5000 [00:00<?, ?it/s]/opt/conda/lib/python3.10/site-packages/torch/nn/parallel/parallel_apply.py:79: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.\n  with torch.cuda.device(device), torch.cuda.stream(stream), autocast(enabled=autocast_enabled):\n/opt/conda/lib/python3.10/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.\n  warnings.warn('Was asked to gather along dimension 0, but all '\ntraining....: 100%|██████████| 5000/5000 [19:13<00:00,  4.33it/s]\n","output_type":"stream"},{"name":"stdout","text":"loss:5.666039412784577\n","output_type":"stream"},{"name":"stderr","text":"evaluate.....: 100%|██████████| 1000/1000 [39:03<00:00,  2.34s/it]\n","output_type":"stream"},{"name":"stdout","text":"loss:3.1411303009986877\nrouge:0.12640854804279847\nepoch:1\n","output_type":"stream"},{"name":"stderr","text":"training....: 100%|██████████| 5000/5000 [19:13<00:00,  4.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"loss:2.8779790729999544\n","output_type":"stream"},{"name":"stderr","text":"evaluate.....: 100%|██████████| 1000/1000 [1:02:08<00:00,  3.73s/it]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.8821856243014337\nrouge:0.19685970261070196\nepoch:2\n","output_type":"stream"},{"name":"stderr","text":"training....: 100%|██████████| 5000/5000 [19:11<00:00,  4.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"loss:2.1142482143998147\n","output_type":"stream"},{"name":"stderr","text":"evaluate.....: 100%|██████████| 1000/1000 [1:03:07<00:00,  3.79s/it]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.3956559882611037\nrouge:0.19798461536858855\nepoch:3\n","output_type":"stream"},{"name":"stderr","text":"training....: 100%|██████████| 5000/5000 [19:13<00:00,  4.34it/s]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.7777285204470157\n","output_type":"stream"},{"name":"stderr","text":"evaluate.....: 100%|██████████| 1000/1000 [1:02:07<00:00,  3.73s/it]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.1971056488901377\nrouge:0.20299841768299062\nepoch:4\n","output_type":"stream"},{"name":"stderr","text":"training....: 100%|██████████| 5000/5000 [19:10<00:00,  4.35it/s]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.6239261152297257\n","output_type":"stream"},{"name":"stderr","text":"evaluate.....: 100%|██████████| 1000/1000 [1:02:37<00:00,  3.76s/it]\n","output_type":"stream"},{"name":"stdout","text":"loss:1.0867493745237589\nrouge:0.2028009525758515\n","output_type":"stream"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}